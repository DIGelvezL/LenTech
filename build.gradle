import java.text.SimpleDateFormat

plugins {
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'com.palantir.git-version' version '0.7.3'
}

group 'com.leantech.daniel.api'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.hibernate.validator:hibernate-validator'

    runtimeOnly 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {

    }

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.4.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.4.2")

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.6.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6.1'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'

    compile group: 'com.h2database', name: 'h2'
    compile group: 'org.hsqldb', name: 'hsqldb'

    compile group: 'org.mockito', name: 'mockito-core'
}

task showVersionDetail {
    doLast {
        println "\nCurrent version: ${gitVersion()}\n"
        def details = versionDetails()
        println "last tag          : ${details.lastTag}"
        println "commit distance   : ${details.commitDistance}"
        println "hash              : ${details.gitHash}"
        println "branch name       : ${details.branchName}"
        println "is clean tag      : ${details.isCleanTag}"
    }
}

task showVersion {
    doLast {
        println "\nCurrent version: ${gitVersion()}\n"
    }
}

task versionTxt() {
    doLast {
        new File(projectDir, "version.txt").text = """Version: ${gitVersion()}
Buildtime: ${new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(new Date())}
Namespace: ${project.getGroup()}
Application-name: ${rootProject.name}
"""
    }
}

test {
    useJUnitPlatform()
}
